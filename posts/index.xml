<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>所有文章 - haofish</title>
        <link>https://haofish.github.io/posts/</link>
        <description>所有文章 | haofish</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Thu, 22 Jul 2021 12:22:01 &#43;0800</lastBuildDate><atom:link href="https://haofish.github.io/posts/" rel="self" type="application/rss+xml" /><item>
    <title>模板</title>
    <link>https://haofish.github.io/2021/07/%E6%A8%A1%E6%9D%BF/</link>
    <pubDate>Thu, 22 Jul 2021 12:22:01 &#43;0800</pubDate><guid>https://haofish.github.io/2021/07/%E6%A8%A1%E6%9D%BF/</guid>
    <description><![CDATA[常用模板（包括网络赛） 一、基础板子 1. 二分 整数二分 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 // 1 while (l &lt; r) { int mid = (l + r) &gt;&gt; 1; if (check(mid)) l = mid + 1; else r = mid; } //]]></description>
</item>
<item>
    <title>数学总结</title>
    <link>https://haofish.github.io/2021/07/%E4%B8%80%E4%BA%9B%E6%9C%89%E7%94%A8%E7%9A%84%E6%95%B0%E5%AD%A6%E5%85%AC%E5%BC%8F%E4%B8%8E%E7%BB%93%E8%AE%BA/</link>
    <pubDate>Wed, 21 Jul 2021 12:22:01 &#43;0800</pubDate><guid>https://haofish.github.io/2021/07/%E4%B8%80%E4%BA%9B%E6%9C%89%E7%94%A8%E7%9A%84%E6%95%B0%E5%AD%A6%E5%85%AC%E5%BC%8F%E4%B8%8E%E7%BB%93%E8%AE%BA/</guid>
    <description><![CDATA[一些有用的数学公式与结论 质数 算术基本定理：$N = {P_1}^{k_1} \times{P_2}^{k_2} \times {P_3}^{k_3} \cdots \times {P_n}^{k_n} \ \ , \ \ P_1 &lt; P_2 &lt; P_3 &lt; \cdots &lt; P_n$ 一个数N约数个数：$(k_1 + 1) \times (k_2 + 1) \times (k_3 + 1) \times]]></description>
</item>
<item>
    <title>树形dp总结</title>
    <link>https://haofish.github.io/2021/07/%E6%A0%91%E5%BD%A2dp/</link>
    <pubDate>Tue, 20 Jul 2021 12:22:01 &#43;0800</pubDate><guid>https://haofish.github.io/2021/07/%E6%A0%91%E5%BD%A2dp/</guid>
    <description><![CDATA[树形dp总结 树形背包常用思考模型 模型一 首先对于每个节点我们在dfs中dp转移时可以想象成一个分组背包，每次新遍历一个子树就可以想象成一个分组]]></description>
</item>
<item>
    <title>ACM常用C&#43;&#43;stl总结</title>
    <link>https://haofish.github.io/2021/07/acm%E5%B8%B8%E7%94%A8c-stl%E6%80%BB%E7%BB%93/</link>
    <pubDate>Mon, 19 Jul 2021 12:22:01 &#43;0800</pubDate><guid>https://haofish.github.io/2021/07/acm%E5%B8%B8%E7%94%A8c-stl%E6%80%BB%E7%BB%93/</guid>
    <description><![CDATA[一、前言 本博客对ACM的常用的函数和c++STL做一个简单的总结， 显然善用这些函数，可以对代码做大幅度地简化 本文主要对每个头文件/函数分常用]]></description>
</item>
<item>
    <title>DP总结</title>
    <link>https://haofish.github.io/2021/07/dp%E6%80%BB%E7%BB%93/</link>
    <pubDate>Mon, 19 Jul 2021 12:22:01 &#43;0800</pubDate><guid>https://haofish.github.io/2021/07/dp%E6%80%BB%E7%BB%93/</guid>
    <description><![CDATA[1. 写在前面的话 之前写了一篇不像总结的动态规划总结，感觉更像是一个成长历程，所以就打算重写一篇。 2. 对DP简单的总结 dp的题目特点： 求最大或者最]]></description>
</item>
<item>
    <title>失误录</title>
    <link>https://haofish.github.io/2021/07/%E5%A4%B1%E8%AF%AF%E5%BD%95/</link>
    <pubDate>Mon, 19 Jul 2021 12:22:01 &#43;0800</pubDate><guid>https://haofish.github.io/2021/07/%E5%A4%B1%E8%AF%AF%E5%BD%95/</guid>
    <description><![CDATA[做题时的失误记录 提交前检查 提交之前人肉debug一下，最好自己造一下特殊的样例走一下 考虑dp的转移决策上 dp状态转移时要考虑好具体对应的决策]]></description>
</item>
<item>
    <title>数位dp总结</title>
    <link>https://haofish.github.io/2021/07/%E6%95%B0%E4%BD%8Ddp/</link>
    <pubDate>Mon, 19 Jul 2021 12:22:01 &#43;0800</pubDate><guid>https://haofish.github.io/2021/07/%E6%95%B0%E4%BD%8Ddp/</guid>
    <description><![CDATA[数位dp总结 数位dp思考形式与套路 对于区间的询问，一般利用的是前缀和的思想来求得答案 在求解答案时，一般是从高位到低位开始对答案进行累计 求解数]]></description>
</item>
<item>
    <title>网络流</title>
    <link>https://haofish.github.io/2021/05/%E7%BD%91%E7%BB%9C%E6%B5%81/</link>
    <pubDate>Wed, 26 May 2021 12:22:01 &#43;0800</pubDate><guid>https://haofish.github.io/2021/05/%E7%BD%91%E7%BB%9C%E6%B5%81/</guid>
    <description><![CDATA[网络流 一、最大流 Ekmonds-Karp 主要思想就是先找增广路，就是一个贪心的过程，注意这是带反悔的贪心，固要建立一个流为0的反边 时间复杂度$O(nm^2)$ bf]]></description>
</item>
<item>
    <title>树上dsu总结</title>
    <link>https://haofish.github.io/2021/05/dsu%E5%88%B7%E9%A2%98/</link>
    <pubDate>Wed, 12 May 2021 12:22:01 &#43;0800</pubDate><guid>https://haofish.github.io/2021/05/dsu%E5%88%B7%E9%A2%98/</guid>
    <description><![CDATA[dsu 树上启发式合并 刷题 套路代码 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 int son[M], dep[M], siz[M]; // son记录重儿子 // 寻找重儿子 void dfs(int u, int fa) { siz[u] =]]></description>
</item>
<item>
    <title>背包问题</title>
    <link>https://haofish.github.io/2021/03/%E8%83%8C%E5%8C%85%E9%97%AE%E9%A2%98/</link>
    <pubDate>Fri, 26 Mar 2021 12:22:01 &#43;0800</pubDate><guid>https://haofish.github.io/2021/03/%E8%83%8C%E5%8C%85%E9%97%AE%E9%A2%98/</guid>
    <description><![CDATA[背包问题总结 本文从dp总结中搬出 背包问题是一类非常经典的动规问题，包括了01背包、完全背包、多重背包、混合背包、二维费用背包、分组背包、有依]]></description>
</item>
</channel>
</rss>
